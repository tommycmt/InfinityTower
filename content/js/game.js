"use strict";var _createClass=function(){function a(b,c){for(var f,d=0;d<c.length;d++)f=c[d],f.enumerable=f.enumerable||!1,f.configurable=!0,"value"in f&&(f.writable=!0),Object.defineProperty(b,f.key,f)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}();function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return b&&("object"==typeof b||"function"==typeof b)?b:a}function _inherits(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}var Game=function(a){function b(c){_classCallCheck(this,b);var d=_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).call(this,c));return d.state={stage:1,player:choosePlayer(),history:{},computing:!1,predead:!1,upgrading:!1},d.init(),d.update=d.update_game_state.bind(d),console.log(d),d}return _inherits(b,a),_createClass(b,[{key:"init",value:function init(){this.state.player.maxhp=1.5*this.state.player.str,this.state.player.maxmana=this.state.player.inte,this.state.player.hp=this.state.player.maxhp,this.state.player.mana=this.state.player.maxmana,this.state.player_status="normal",this.state.monster=genMonster(this.state.stage),this.state.monster.maxhp=1.5*this.state.monster.str,this.state.monster.maxmana=this.state.monster.inte,this.state.monster.hp=this.state.monster.maxhp,this.state.monster.mana=this.state.monster.maxmana,this.state.monster_status="normal"}},{key:"update_game_state",value:function update_game_state(c,d){var t=this;switch(this.setState({computing:!0}),c){case"new_game":this.setState({stage:1,player:choosePlayer(),history:[],upgrading:!1,predead:!1},function(){this.init(),this.setState({computing:!1})});break;case"save_game":var f={state:this.state},g=b64EncodeUnicode(JSON.stringify(f));this.setState({fight_message:-1,message:41}),setTimeout(function(){t.setState({fight_message:-1,message:42,message_content:{message_save_data:g}},function(){!1==this.state.upgrading&&!1==this.state.predead&&this.setState({computing:!1})})},1e3);break;case"load_game":try{var g=b64DecodeUnicode(d.saved_data),h=JSON.parse(g);!1==h.state.upgrading&&!1==h.state.predead&&(h.state.computing=!1),Object.keys(h.state).forEach(function(u){t.setState(_defineProperty({},u,h.state[u]))})}catch(u){alert("Corrupted Data")}break;case"fight":var j=fight(d.player_choice);this.state.player_choice=d.player_choice,this.state.monster_choice=j.monster_choice,0==j.result?setTimeout(function(){t.fight("draw")},500):1==j.result?(this.setState({player_status:"atk",monster_status:"damaged"}),setTimeout(function(){t.fight("player_hit")},1500)):(this.setState({player_status:"damaged",monster_status:"atk"}),setTimeout(function(){t.fight("monster_hit")},1500));break;case"skill":switch(d.skill_usage){case"attack":var j=atk_skill(this.state.player,d.skill_usage,d.skill_name,d.skill_lv);this.setState({player_status:"atk",monster_status:"damaged"}),setTimeout(function(){t.skill(j)},1e3);break;case"buff":var j=buff_skill(this.state.player,d.skill_usage,d.skill_name,d.skill_lv);setTimeout(function(){t.buff(j)},500);}break;case"upgrade":"stat"==d.type?this.upgrade_stat(d):"skill"==d.type&&this.upgrade_skill(d.skill_name,d.exp_cost);break;case"item":if(this.setState({fight_message:-1}),"reborn"==d.name){var u,k=Object.assign({},this.state.player.skills);for(var l in this.state.player.skills){k[l].cd=0}var n=this.state.player.buff_type,o=Object.assign({},this.state.player,(u={gold:this.state.player.gold-d.price,skills:k},_defineProperty(u,n,this.state.player[n]-this.state.player.temp_buff),_defineProperty(u,"buff_turn",0),u));this.setState({player:o,message:34,message_content:{message_price:100}},function(){setTimeout(function(){t.init(),t.setState({computing:!1,predead:!1}),t.setState({message:-1})},1500)})}else{switch(d.name){case"hp":var p=Math.min(parseInt(this.state.player.hp)+parseInt(d.point),this.state.player.maxhp),o=Object.assign({},this.state.player,{hp:p,gold:this.state.player.gold-d.price});this.setState({player:o}),this.setState({message:31,message_content:{message_price:d.price,message_hp:d.point}});break;case"mana":var q=Math.min(parseInt(this.state.player.mana)+parseInt(d.point),this.state.player.maxmana),o=Object.assign({},this.state.player,{mana:q,gold:this.state.player.gold-d.price});this.setState({player:o}),this.setState({message:32,message_content:{message_price:d.price,message_mana:d.point}});break;case"bomb":var r=d.point,o=Object.assign({},this.state.player,{gold:this.state.player.gold-d.price});this.setState({player:o});var s=Object.assign({},this.state.monster,{hp:(this.state.monster.hp-r).toFixed(1)});this.setState({monster:s}),this.setState({player_status:"atk",monster_status:"damaged"}),this.setState({message:33,message_content:{message_price:d.price,message_dam:d.point}});}setTimeout(function(){t.after_fight()},1e3)}default:}}},{key:"fight",value:function fight(c){switch(c){case"draw":this.setState({fight_message:2});break;case"player_hit":for(var d=this.state.player.dex,f=1;50*Math.random()<d;)f+=0.25,d-=50;var g=((this.state.player.str/10+parseInt(this.state.player.inte/5))*f).toFixed(1),h=Object.assign({},this.state.monster,{hp:(this.state.monster.hp-g).toFixed(1)});this.setState({monster:h,player_status:"normal",monster_status:"normal"}),this.setState({fight_message:1,message_content:{message_atk:"Player",message_crit:f,message_method:"normal",message_dam:g}});break;case"monster_hit":for(var d=this.state.monster.dex,f=1;50*Math.random()<d;)f+=0.25,d-=50;var g=((this.state.monster.str/10+parseInt(this.state.monster.inte/5))*f).toFixed(1),j=Object.assign({},this.state.player,{hp:(this.state.player.hp-g).toFixed(1)});this.setState({player:j,player_status:"normal",monster_status:"normal"}),this.setState({fight_message:1,message_content:{message_atk:"Monster",message_crit:f,message_method:"normal",message_dam:g}});break;default:}var k=Object.assign({},this.state.player.skills);for(var l in this.state.player.skills){var m=Math.max(this.state.player.skills[l].cd-1,0);k[l].cd=m}var j,n=Math.min(this.state.player.mana+parseInt(this.state.player.inte/6),this.state.player.maxmana),o=this.state.player.buff_type;j=0==this.state.player.buff_turn-1?Object.assign({},this.state.player,_defineProperty({mana:n,skills:k,buff_turn:this.state.player.buff_turn-1},o,this.state.player[o]-this.state.player.temp_buff)):Object.assign({},this.state.player,{mana:n,skills:k,buff_turn:this.state.player.buff_turn-1}),this.setState({player:j}),this.after_fight()}},{key:"skill",value:function skill(c){var d=this.state.player.mana-c.cost,f=skill_list[c.skill_name].base_cd,g=Object.assign({},this.state.player.skills);g[c.skill_name].cd=f;for(var h=Object.assign({},this.state.player,{mana:d,skills:g}),j=this.state.player.dex,k=1;50*Math.random()<j;)k+=0.25,j-=50;var l=(c.dam*k).toFixed(1),m=Object.assign({},this.state.monster,{hp:(this.state.monster.hp-l).toFixed(1)});this.setState({player:h,monster:m,player_status:"normal",monster_status:"normal"}),this.setState({fight_message:1,message_content:{message_atk:"Player",message_crit:k,message_method:c.skill_name,message_dam:l}}),this.after_fight()}},{key:"buff",value:function buff(c){var k,d=this.state.player.mana-c.cost,f=skill_list[c.skill_name].base_cd,g=Object.assign({},this.state.player.skills);g[c.skill_name].cd=f;var h=skill_list[c.skill_name].type,j=Object.assign({},this.state.player,(k={mana:d,skills:g},_defineProperty(k,h,this.state.player[h]+c.inc),_defineProperty(k,"buff_type",h),_defineProperty(k,"buff_turn",c.buff_turn),_defineProperty(k,"temp_buff",c.inc),k));this.setState({player:j,player_status:"normal",monster_status:"normal"}),this.setState({fight_message:11,message_content:{message_buffer:"Player",message_buffType:h,message_skill:c.skill_name,message_inc:c.inc}}),this.after_fight()}},{key:"after_fight",value:function after_fight(){var c=this;0>=this.state.player.hp?(this.setState({player_status:"dead"}),this.setState({message:12}),setTimeout(function(){c.player_pre_dead()},1e3)):0>=this.state.monster.hp?(this.setState({monster_status:"dead"}),this.setState({message:11}),setTimeout(function(){c.player_win()},1e3)):this.setState({computing:!1,message:-1})}},{key:"player_pre_dead",value:function player_pre_dead(){this.setState({fight_message:-1}),this.setState({predead:!0})}},{key:"player_win",value:function player_win(){this.setState({fight_message:-1}),this.setState({upgrading:!0});var c=Object.assign({},this.state.player,{gold:this.state.player.gold+parseInt(5*Math.random())+this.state.stage,exp:this.state.player.exp+parseInt(5*Math.random())+this.state.stage});this.setState({player:c})}},{key:"upgrade_stat",value:function upgrade_stat(c){var h=this,d=Math.min(parseInt((this.state.stage+5)/5),5),f=c.statType,g=Object.assign({},this.state.player,_defineProperty({},f,this.state.player[c.statType]+d));this.setState({player:g,upgrading:!1,message:21,message_content:{message_stat_type:f,message_stat_point:d}},function(){setTimeout(function(){var j=h.state.stage;h.setState({stage:j+1}),h.init(),h.setState({computing:!1}),h.setState({message:-1})},1500)})}},{key:"upgrade_skill",value:function upgrade_skill(c,d){var j=this,f=this.state.player.skills[c].lv+1,g=Object.assign({},this.state.player.skills);g[c].lv=f;var h=Object.assign({},this.state.player,{skills:g,exp:this.state.player.exp-d});this.setState({player:h,upgrading:!1,message:22,message_content:{message_skill_name:c,message_skill_lv:f}},function(){setTimeout(function(){var k=j.state.stage;j.setState({stage:k+1}),j.init(),j.setState({computing:!1}),j.setState({message:-1})},1500)})}},{key:"render",value:function render(){return React.createElement("div",null,React.createElement("div",{id:"game_header"},React.createElement(Header,{stage:this.state.stage,player_choice:this.state.player_choice,monster_choice:this.state.monster_choice,game:this.state,update:this.update})),React.createElement("div",{id:"game_player"},React.createElement(Player,{player:this.state.player,status:this.state.player_status,game:this.state,update:this.update})),React.createElement("div",{id:"game_monster"},React.createElement(Monster,{monster:this.state.monster,status:this.state.monster_status,game:this.state,update:this.update})),React.createElement("div",{id:"game_message"},React.createElement(Message,{fight_message:this.state.fight_message,message:this.state.message,message_content:this.state.message_content,update:this.update})),React.createElement("div",{id:"game_control"},React.createElement(Control,{player:this.state.player,computing:this.state.computing,skills:this.state.player.skills,upgrade:this.state.upgrading,predead:this.state.predead,update:this.update})))}}]),b}(React.Component);